---
import { Icon } from "astro-icon/components";
import menu from "../config/menu.json";

interface NavLink {
  name: string;
  url: string | null;
  isDropdown?: boolean;
  menu?: NavLink[];
}

const { navbar }: { navbar: NavLink[] } = menu;
---

<div class="navbar justify-between bg-base-100">
  <div class="flex-none">
    <div class="flex lg:hidden">
      <label for="sidebar" class="btn btn-square btn-ghost"
        ><Icon name="tabler:menu-2" size={24} /></label
      >
    </div>
  </div>
  <div class="hidden flex-1 lg:flex">
    {
      navbar.map((item) => {
        return item.isDropdown ? (
          <details class="dropdown shadow-none">
            <summary class="btn btn-ghost my-1 gap-0 shadow-none">
              <span class="font-medium">{item.name}</span>
              <Icon name="tabler:chevron-down" size={18} />
            </summary>
            <ul class="menu dropdown-content z-[1] w-52 rounded-box bg-base-100 p-2 shadow">
              {item.menu?.map((innerItem) => (
                <li>
                  <a href={innerItem.url}>{innerItem.name}</a>
                </li>
              ))}
            </ul>
          </details>
        ) : (
          <a href="/" class="btn btn-ghost font-medium">
            <span class="font-medium">{item.name}</span>
          </a>
        );
      })
    }
  </div>
  <div class="flex-none">
    <button class="btn btn-square btn-ghost">
      <Icon name="tabler:user-edit" size={24} />
    </button>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const dropdownList = document.querySelectorAll("details.dropdown");

    document.addEventListener("click", (event) => {
      dropdownList.forEach((details) => {
        if (!details.contains(event.target)) {
          details.removeAttribute("open");
        }
      });
    });
  });
</script>
